name: 'Setup Python Environment'
description: 'Setup Python with dependency caching and installation'
inputs:
  python-version:
    description: 'Python version to setup'
    required: true
    default: '3.11'
  cache-dependency-path:
    description: 'Path to dependency files for cache key'
    required: false
    default: '**/requirements*.txt'
  install-dev-deps:
    description: 'Whether to install development dependencies'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.local/share/pip-cache
        key: ${{ runner.os }}-pip-${{ inputs.python-version }}-${{ hashFiles(inputs.cache-dependency-path, '**/pyproject.toml', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ inputs.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip setuptools wheel
        if [ -f "pyproject.toml" ]; then
          pip install -e .
        elif [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        fi
        
        # Install development dependencies if requested
        if [ "${{ inputs.install-dev-deps }}" == "true" ]; then
          if [ -f "requirements-dev.txt" ]; then
            pip install -r requirements-dev.txt
          fi
          # Install testing and linting tools
          pip install pytest pytest-cov pytest-xdist pytest-mock
          pip install pylint mypy bandit safety
          pip install black isort flake8
        fi
